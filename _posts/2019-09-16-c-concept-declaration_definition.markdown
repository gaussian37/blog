---
layout: post
title: declaration(선언)과 definition(정의) 차이
date: 2019-09-16 00:00:00
img: c/c.png
categories: [c-concept] 
tags: [c, declaration, definition, 선언, 정의] # add tag
---

- C/C++ 언어 관련 글을 읽다가 보면 `declaration`과 `definition`이라는 용어가 나오는데 그 차이점에 대하여 알아보겠습니다.
- 먼저 `declaration(선언)`에 대하여 알아보도록 하겠습니다.
- 변수 선언은 컴파일러에 변수명, 변수 타입 그리고 초깃값이 정의되어 있다면 초깃값 까지 전달하는 역할을 합니다.
- 즉, 변수 선언은 컴파일러에 어떤 변수에 대한 상세한 정보를 주는 역할을 합니다.
- 그러면 `definition(정의)`는 무슨 역할을 할까요?
- 정의는 선언한 변수가 어디에 저장되는지를 나타냅니다. 즉, 변수가 메모리 영역에 할당되는 순간을 정의라고 합니다.

<br>

- 보통 C언어에서는 선언과 정의가 동시에 발생합니다. 그래서 전혀 차이가 없어 보입니다. 
- 예를 들면 선언과 정의가 동시에 발생하는 것이 다음과 같습니다.

<br>

```cpp
int a; //선언과 정의가 동시에 적용
```

<br>

- C언어의 변수에서는 선언과 정의가 보통 동시에 발생하기 때문에 차이점을 잘 모를 수 있으나 함수에서는 차이점이 확연히 나타납니다.
- 함수의 선언 또한 컴파일러에게 함수의 상세한 정보를 알려줍니다. 즉,함수명, 리턴타입, 매개변수 등등을 컴파일러에 전달해줍니다.

<br>

```cpp
int add(int, int) // 함수의 선언
```

<br>

- 위 함수의 선언은 함수명, 리턴 타입 그리고 2개의 매개변수가 있다는 것을 컴파일러에 알려줍니다.
- 하지만 이 단계에서는 아직 함수가 메모리에 할당되지는 않습니다.

<br>

```cpp
// 함수의 정의
int add(int a, int b)
{
    return (a+b);
}
```

<br>

- 정의 단계에서는 위 함수가 메모리 영역에 할당됩니다. 

<br>

- 정리해 보겠습니다.
- `Declaration(선언)`: 변수나 함수는 여러번 선언될 수 있고 이 단계에서는 메모리에 할당되지 않습니다. 이 단계에서는 컴파일러에 변수나 함수의 정보만 알려줍니다.
- `Definition(정의)`: 변수나 함수는 딱 한번 정의되고 이 단계에서 메모리에 할당됩니다. 