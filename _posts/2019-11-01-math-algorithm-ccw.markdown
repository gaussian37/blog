---
layout: post
title: CCW(counter clockwise)
date: 2019-11-01 00:00:00
img: math/algorithm/algorithm.png
categories: [math-algorithm] 
tags: [ccw, counter clockwise] # add tag
---

- 어떤 두 점의 방향 관계성을 보면 기준점 `p1`이 또 다른 점 `p2`에 대하여 **시계 방향(clockwise)에 존재하는지, 반시계 방향(counter clockwise)에 존재하는 지** 알 수 있습니다.
- 이는 `벡터의 외적`을 통하여 `방향성`을 확인 할 수 있는데 외적에 관한 자세한 내용은 다음 링크를 확인하시기 바랍니다.
    - 참조 : https://gaussian37.github.io/math-la-cross-product/
- 벡터의 외적은 3차원 좌표계에서 계산할 수 있습니다. 즉, 반드시 한 개의 벡터에 3차원의 정보가 있어야 한다는 뜻입니다.
- 예를 들어 두 벡터가 3차원에 존재한다면 $$ \bar{v}_{1} = (x_{1}, y_{1}, z_{1}) $$과 $$ \bar{v}_{2} = (x_{2}, y_{2}, z_{2}) $$가 있고 이 두 벡터의 외적을 통하여 $$ v_{1} $$이 $$ v_{2} $$에 대하여 시계방향에 있는지 반시계방향에 있는지 확인할 수 있습니다.
- 만약 2차원에 존재하는 점이라면 z축의 값을 0으로 두면 됩니다. 즉, $$ \bar{v}_{1} = (x_{1}, y_{1}, 0) $$과 $$ \bar{v}_{2} = (x_{2}, y_{2}, 0) $$로 하여 한 축을 무시해 버리면 2차원 좌표에서도 벡터의 외적을 적용할 수 있습니다.
- 그러면 외적의 값에 따라서 어떻게 방향을 구분할 수 있을까요?
- 외적의 결과값이 `음수`이면 **시계방향**이고 `양수`이면 **반시계방향**입니다. `0`이면 **일직선 방향**입니다. 현재 알고리즘의 이름이 CCW(반시계방향)이므로 양수이면 반시계방향이라는 것만 일단 숙지하시면 도움이 됩니다.

<br>




